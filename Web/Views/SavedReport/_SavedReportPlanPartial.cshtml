@model Web.ViewModels.SavedReportPlanViewModel

@{
    Layout = null;
    var formId = Guid.NewGuid();
}

<div class="card">
    <div class="card-body">
        <form id="@(formId)" asp-route="CreateSavedReportPlan" data-request="ajax">
            <fieldset>
                <input type="hidden" asp-for="CompanyId" />
                <input type="hidden" asp-for="NumberOfPeriods" />
                <input type="hidden" asp-for="Date" value="@Model.Date.ToString("yyyy-MM-dd")" />

                @for(int i = 0; i < Model.Fields.Count; i++) {
                    var field = Model.Fields[i];
                    var fieldNameId = System.Text.RegularExpressions.Regex.Replace(field.Name, @"[\s)(]+", "") + "_id";
                    var fieldCodeId = $"{fieldNameId}_count";
                    var fieldValueId = $"{fieldNameId}_amount";

                    <div class="form-group row">
                        <label for="@field.Name" class="col-2 col-form-label">@field.Name</label>
                        <input type="hidden" name="Fields[][Name]" value="@field.Name" />

                        @if(field.CountDisplay) {
                            <div class="@(field.AmountDisplay ? "col-5" : "col-10 col-lg-5")">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text" id="basic-addon1"><i class="fa fa-users"></i></span>
                                    </div>
                                    <input type="number" class="form-control" name="Fields[][Count]" id="@(fieldCodeId)" value="@(field.Count)" min="0" step="1" @(field.CountReadOnly ? "readonly" : "") required>
                                </div>
                            </div>
                        }

                        @if(field.AmountDisplay) {
                            <div class="col-5">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-dollar-sign"></i></span>
                                    </div>
                                    <input type="number" class="form-control" name="Fields[][Amount]" id="@(fieldValueId)" value="@(field.Amount ?? 0)" min="0" step="0.01" required>
                                </div>
                            </div>
                        }
                    </div>
                }
            </fieldset>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(document).ready((e) => {
        var $form = $('#@(formId)');
        var $totalCustomerCount = $('#TotalCustomers_id_count');
        var $typesCount = $form.find('input[id*=\'_count\']:not([readonly]):not([id*=\'-\']):not([id*=\'+\'])');

        var $balanceCount = $('#Balance_id_count');
        var $noBalanceCount = $('#NoBalance_id_count');

        var $totalLateValue = $('#TotalLate_id_amount');
        var $totalLateCount = $('#TotalLate_id_count');

        var $currentValue = $('#-31-0_id_amount');
        var $currentCount = $('#-31-0_id_count');
        var $totalValue = $('#Total_id_amount');
        var $totalCount = $('#Total_id_count');

        var $values = $form.find('input[id*=\'-\'][id*=\'_amount\'],input[id*=\'+\'][id*=\'_amount\']');
        var $counts = $form.find('input[id*=\'-\'][id*=\'_count\'],input[id*=\'+\'][id*=\'_count\']');

        $form.find('input').on('change', (e) => {
            var totalCustomersCount = 0;
            $typesCount.each((index, element) => { totalCustomersCount += parseFloat($(element).val() || 0) });
            $totalCustomerCount.val(totalCustomersCount);

            var totalValue = 0;
            $values.each((index, element) => { totalValue += parseFloat($(element).val() || 0) });
            $totalValue.val(totalValue);

            var totalCount = 0;
            $counts.each((index, element) => { totalCount += parseFloat($(element).val() || 0) });
            $totalCount.val(totalCount);

            $totalLateValue.val((totalValue - parseFloat($currentValue.val() || 0).toFixed(2)));
            $totalLateCount.val(totalCount - parseFloat($currentCount.val() || 0));

            var balanceCount = totalCount;
            var noBalanceCount = totalCustomersCount - totalCount;
            $balanceCount.val(totalCount);
            $noBalanceCount.val(noBalanceCount);
        });
    });
</script>