@model Web.ViewModels.InvoiceFilterViewModel
@{
    ViewData["Title"] = "Invoices";
}

@section Toolbar  {
<div class="btn-toolbar" role="toolbar">
    <button id="bulkDeleteBtn" class="btn btn-danger"><i class="fa fa-trash-alt mr-1"></i> Remove</button>
</div>
}

@section SidebarContent {
<div class="card">
    <ul class="list-group list-group-flush">
        <li class="list-group-item list-group-item-dark d-flex justify-content-between align-items-center">
            <span>Total rows:</span>
            <span><span id="totalRows">0</span></span>
        </li>
        <li class="list-group-item list-group-item-dark d-flex justify-content-between align-items-center">
            <span>Total amount:</span>
            <span><span id="totalAmount">$0.00</span></span>
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-center">
            <span>Checked/unchecked:</span>
            <span><span id="totalChecked">0</span></span>
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-center">
            <span>Total checked amount:</span>
            <span><span id="totalCheckedAmount">$0.00</span></span>
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-center">
            <span>Total unchecked amount:</span>
            <span><span id="balanceAmount">$0.00</span></span>
        </li>
    </ul>
</div>
}

<div class="card">
    <div class="card-body">
        <div id="toolbar" class="btn-toolbar" role="toolbar">
            <div class="btn-group mr-1" role="group" aria-label="Invoice active button group">
                <a asp-controller="Invoice" asp-action="Create" class="btn btn-secondary"><i class="fa fa-plus mr-1"></i> Create</a>
                <a asp-controller="Invoice" asp-action="Bulk" class="btn btn-secondary"><i class="fa fa-mail-bulk mr-1"></i> Bulk</a>
            </div>

            <div class="btn-group mr-1" role="group" aria-label="Filter active button group">
                <button id="filterBtn" class="btn btn-secondary">Filter</button>
            </div>

            <div class="btn-group mr-1" role="group" aria-label="Payment active button group">
                <button id="bulkPaymentBtn" class="btn btn-primary hide" disabled>Create payment</button>
            </div>

            <form id="filterForm">
                <input type="hidden" asp-for="CompanyId" />
                <input type="hidden" asp-for="Date" />
                <input type="hidden" asp-for="NumberOfPeriods" />
                <input type="hidden" asp-for="Periods" />
                <input type="hidden" asp-for="TypeId" />
                <input type="hidden" asp-for="DateFrom" />
                <input type="hidden" asp-for="DateTo" />
                <input type="hidden" asp-for="CreatedDateFrom" />
                <input type="hidden" asp-for="CreatedDateTo" />
                <input type="hidden" name="RandomSort:boolean" id="RandomSort" data-val="@Model.RandomSort" data-value-type="boolean" value="@Model.RandomSort" />
                <input type="hidden" name="MoreThanOne:boolean" id="MoreThanOne" data-val="@Model.MoreThanOne" data-value-type="boolean" value="@Model.MoreThanOne" />
            </form>
        </div>

        <table id="datatable" data-toggle="table" data-url="/api/invoice"
               data-query-params="queryParams"
               data-total-field="totalItems"
               data-data-field="items"
               data-select-item-name="Invoices[]" >
            <thead>
                <tr>
                    <th data-checkbox="true"></th>
                    <th data-field="no" data-sortable="true">Invoice</th>
                    <th data-field="customerName" data-formatter="nameFormatter">Customer</th>
                    <th data-field="customerCreatedDate" data-formatter="$.fn.bootstrapTable.formatDate">Customer<br />Created Date</th>
                    <th data-field="customerType">Type</th>
                    <th data-field="customerTags" data-formatter="tagsFormatter">Tags</th>
                    <th data-field="date" data-formatter="$.fn.bootstrapTable.formatDate" data-sorter="$.fn.bootstrapTable.sortDate" data-sortable="true">Date</th>
                    <th data-field="dueDate" data-formatter="$.fn.bootstrapTable.formatDate">Due Date</th>
                    <th data-field="balance">Balance</th>
                    <th data-field="amount" data-sortable="true" data-sort-name="subtotal">Amount</th>
                    <th data-field="status">Status</th>
                    <th data-field="createdDate" class="text-nowrap text-right" data-formatter="$.fn.bootstrapTable.formatDateTime" data-sorter="$.fn.bootstrapTable.sortDate" data-sortable="true">Record Date</th>
                    <th data-formatter="actionFormatter" class="text-nowrap text-right table-active" data-width="10" data-width-unit="%">Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">
        $(document).ready(e => {
            $table = $('#datatable');

            $filterBtn = $('#filterBtn').click(_ => {
                var options = {
                    'url': '/invoice/filter',
                    'data': $('#filterForm').serializeJSON({ parseNumbers: true, checkboxUncheckedValue: false })
                };

                $.ajax(options).done((data, status, jqXHR) => {
                    $(data).dialog('Filter', (action, e, content) => {
                        switch (action) {
                            case 'modal.on.load':
                                $(content).on('submit', evt => {
                                    evt.preventDefault();
                                    $('#filterForm').loadJSON(content.serializeJSON({ parseNumbers: true, checkboxUncheckedValue: false }));
                                    $table.bootstrapTable('refresh');
                                    window.modal.modal('hide');
                                });
                                break;
                            case 'shown.bs.modal':
                                break;
                            case 'hidden.bs.modal':
                                break;
                        }
                    });
                });
            });

            $bulkPaymentBtn = $('#bulkPaymentBtn').click(_ => {
                var selections = $table.bootstrapTable('getSelections');
                var ids = selections.map(x => x.id);

                if (ids.length > 0) {
                    var options = {
                        'type': 'post',
                        'url': '/payment/bulkpayment',
                        'data': { ids: ids }
                    };

                    $.ajax(options).done((data, status, jqXHR) => {
                        $(data).dialog('Create payments');
                    });
                }
            });

            $bulkDeleteBtn = $('#bulkDeleteBtn').click(_ => {
                if (!confirm('Are you sure want to delete this?')) { return false; }

                var selections = $table.bootstrapTable('getSelections');
                var ids = selections.map(x => x.id);

                if (ids.length > 0) {
                    var options = {
                        'type': 'post',
                        'url': '/invoice/bulkdelete',
                        'data': { ids: ids }
                    };

                    $.ajax(options).done((data, status, jqXHR) => {
                        if (data == true) {
                            $table.bootstrapTable('refresh');
                        } else {
                            alert("First delete payments for these invoices!");
                        }
                    });
                }
            });

            $table.on('load-success.bs.table', function (e, data, jqXHR) {
                $('#totalAmount').html(data?.params[1]).data('value', data?.params[0]);

                statPanel();
            });

            $table.on('check.bs.table uncheck.bs.table check-all.bs.table uncheck-all.bs.table', function () {
                statPanel();
            });
        });

        function statPanel() {
            var options = $table.bootstrapTable('getOptions');
            var selections = $table.bootstrapTable('getSelections');

            if (!selections.length) {
                $bulkPaymentBtn.hide();
                $bulkDeleteBtn.hide();
            } else {
                $bulkPaymentBtn.show();
                $bulkDeleteBtn.show();
            }

            $('#totalRows').html(options.totalRows);
            $('#totalChecked').html(`${selections.length}/${options.totalRows - selections.length}`);

            var totalCheckedamount = 0, totalAmount = $('#totalAmount').data('value');
            $.each(selections, function () { totalCheckedamount += this.subtotal || 0; });

            var totalCheckedAmountFormatted = $.fn.bootstrapTable.formatCurrency(totalCheckedamount);
            $('#totalCheckedAmount').html(totalCheckedAmountFormatted);

            var balanceAmountFormatted = $.fn.bootstrapTable.formatCurrency(totalAmount - totalCheckedamount);
            $('#balanceAmount').html(balanceAmountFormatted);
        }

        function queryParams(params) {
            if (!params.search) {
                params.search = $('div.search input').val();
            }
            var filterForm = $('#filterForm').serializeJSON();

            return $.extend({}, params, filterForm);
        }

        function nameFormatter(value, row) {
            return `${value} <p class='text-muted'>${row.companyName}</p>`;
        }

        function tagsFormatter(value, row) {
            return value.map((t) => `<span class='badge badge-info'>${t}</span>`).join(' ');
        }

        function actionFormatter(value, row) {
            return `<a href='/invoice/edit/${row.id}' class='btn btn-secondary mr-1'>Edit</a>
                    <a href='/invoice/details/${row.id}' class='btn btn-secondary'>Detail</a>`
        }
    </script>
}