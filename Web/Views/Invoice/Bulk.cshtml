@model Web.ViewModels.CustomerFilterViewModel
@{
    ViewData["Title"] = "Create Bulk Invoicing";
    ViewData["SubTitle"] = "Bulk Invoicing is ideal for when you have a lot of clients to bill for a lot of work. Use the Bulk Invoice wizard to quickly create and send invoices to all of your clients quickly!";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index">Invoices</a></li>
        <li class="breadcrumb-item active" aria-current="page">Bulk Invoicing</li>
    </ol>
</nav>

<div class="card mb-3">
    <div class="card-body">
        <form class="need-validation" id="submitForm" action="/api/invoice/bulk" method="post">
            <fieldset>
                <div class="form-row mb-3">
                    <div class="col-md-3">
                        <label asp-for="CompanyId"></label>
                        <select id="companyId" asp-for="CompanyId" asp-items="@ViewBag.Companies" class="form-control" required></select>
                    </div>
                    <div class="col-md-3">
                        <label asp-for="SummaryRangeId"></label>
                        <select id="summaryRange" asp-for="SummaryRangeId" asp-items="@ViewBag.SummaryRange" class="form-control" required></select>
                    </div>
                    <div class="col-md-3">
                        <label asp-for="DateFrom"></label>
                        <input asp-for="DateFrom" type="date" class="form-control" required>
                    </div>
                    <div class="col-md-3">
                        <label asp-for="DateTo"></label>
                        <input asp-for="DateTo" type="date" class="form-control" required>
                    </div>
                </div>
                <div class="form-row mb-3">
                    <div class="col-md-2">
                        <label asp-for="TagsIds"></label>
                        <select asp-for="TagsIds" asp-items="@ViewBag.Tags" name="TagsIds[]" class="form-control selectpicker"
                                multiple
                                data-live-search="true">
                            <option value="0">&#8249; No tags &#8250;</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label asp-for="TypeIds"></label>
                        <select id="bootstrap-table-filter-control-type" asp-items="@ViewBag.CustomerTypes" name="TypeIds[]" class="form-control selectpicker" data-field="type"
                                multiple
                                data-live-search="true">
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label asp-for="Recheck">Recheck</label>
                        <select id="recheck" name="Recheck[]" class="form-control selectpicker" data-field="type"
                                multiple
                                data-live-search="true">
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label asp-for="CreatedDateFrom"></label>
                        <input asp-for="CreatedDateFrom" type="date" class="form-control">
                    </div>
                    <div class="col-md-3">
                        <label asp-for="CreatedDateTo"></label>
                        <input asp-for="CreatedDateTo" type="date" class="form-control">
                    </div>
                </div>
                <div class="form-row mb-3">
                    <div class="col-md-2">
                        <label asp-for="CurrentInvoices"></label>
                        <input asp-for="CurrentInvoices" class="form-control" />
                    </div>

                    <div class="col-md-2">
                        <label asp-for="LateInvoices"></label>
                        <input asp-for="LateInvoices" class="form-control" />
                    </div>
                </div>

                <div class="form-check mb-3 col">
                    <input type="checkbox" class="form-check-input" @(Model.RandomSort ? "checked" : "") name="RandomSort:boolean" id="RandomSort" data-val="true" data-value-type="boolean" />
                    <label asp-for="RandomSort" class="form-check-label"></label>
                </div>
                <button type="button" class="btn btn-outline-primary" id="filterApplyBtn">Filter</button>
            </fieldset>

            <table id="datatable" class="table" data-toggle="table" data-url="/api/customer"
                   data-query-params="queryParams"
                   data-total-field="totalItems"
                   data-data-field="items"
                   data-select-item-name="Customers[]"
                   data-filter-control="true"
                   data-filter-control-container="true"
                   data-ajax-options="ajaxOptions"
                   data-click-to-select="true">
                <thead>
                    <tr>
                        <th data-field="state" data-checkbox="true"></th>
                        <th data-field="no" scope="col" data-sortable="true">No</th>
                        <th data-field="name" scope="col" data-sortable="true">Name</th>
                        <th data-field="createdDate" scope="col" data-formatter="$.fn.bootstrapTable.formatDate">Created Date</th>
                        <th data-formatter="tagsFormatter" data-field="tags" scope="col">Tags</th>
                        <th data-field="type" scope="col" data-filter-control="select" data-width="10" data-width-unit="%">Type</th>
                        <th data-field="recheck" scope="col" data-filter-control="select" data-width="10" data-width-unit="%">Recheck</th>
                        <th data-field="totalInvoices" scope="col" data-sortable="true">Current Invoices</th>
                        <th data-field="unpaidInvoices" scope="col" data-sortable="true">Late Invoices</th>
                        <th data-field="terms" scope="col" data-width="20" data-width-unit="%">Terms</th>
                    </tr>
                </thead>
            </table>
        </form>
    </div>
    <div class="card-footer" role="toolbar" aria-label="Toolbar with button groups">
        <button type="button" class="btn btn-primary" id="generateBtn">Generate</button>
        <a asp-action="index" class="btn btn-link">Cancel</a>
    </div>
</div>

<div class="row mb-3">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center">
                    <h5 class="m-0">Formed invoices</h5>
                    <button id="applyBtn" type="button" class="btn btn-sm btn-outline-secondary">Apply <i class="fa fa-chevron-right ml-1"></i></button>
                </div>
            </div>
            <div class="card-body">
                <div id="content"></div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-header"><h5>Invoices prepared for saving</h5></div>
            <div class="card-body">
                <div id="savedContent"></div>
            </div>
            <div class="card-footer" role="toolbar" aria-label="Toolbar with button groups">
                <button id="saveBtn" type="button" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @*<script src="~/lib/bootstrap-table/extensions/toolbar/bootstrap-table-toolbar.min.js"></script>*@
    <script type="text/javascript">
        window.ajaxOptions = {
            traditional: true,
            beforeSend: (jqXHR, settings) => {
                window.localStorage.setItem("recheckSelected", $("#recheck").val());
            },
            complete: (jqXHR, status) => {
                if (status === 'success') {
                    var recheckFilter = jqXHR.responseJSON.filter["Recheck"];
                    if (recheckFilter !== undefined) {
                        var recheckSelected = window.localStorage.getItem("recheckSelected").split(',');
                        var opt = recheckFilter.map((val, i) => { return `<option value='${val}' ${recheckSelected.includes(val) ? "selected='selected'" : null}>${val}</option>` });
                        $("#recheck").html(opt).selectpicker('refresh')
                    }
                }
            }
        }

        function queryParams(params) {
            if (!params.search) {
                params.search = $('div.search input').val();
            }
            var filterForm = $('#submitForm').serializeJSON({ parseNumbers: true });

            return $.extend({}, params, filterForm);
        }

        function tagsFormatter(value, row) {
            return value.map((t) => `<span class='badge badge-info'>${t.name}</span>`).join(' ');
        }

        function invoicesFormatter(value, row) {
            var unpaid = row['unpaidInvoices'];
            return unpaid == 0 || unpaid == null ? value : `${value} <span class='font-weight-bold'>(${unpaid})<span>`;
        }

        $(document).ready(e => {
            var $table = $('#datatable');

            var $filterApplyBtn = $('#filterApplyBtn').on('click', e => {
                e.preventDefault();
                //reset filter
                $table.bootstrapTable('refreshOptions', {
                    sortName: '',
                    sortOrder: "asc"
                });
                //$table.bootstrapTable('refresh');
            });

            var $generateBtn = $('#generateBtn').on('click', e => {
                e.preventDefault();
                $(e.currentTarget).disabled();

                var submitForm = $('#submitForm');
                submitForm.ajaxSubmit({}, (target, data, status) => {
                    status === 'success' ? $('#content').html(data) : $('#content').empty();
                    $(e.currentTarget).enabled();
                });
            });

            var $applyBtn = $('#applyBtn').on('click', e => {
                e.preventDefault();
                $('#content form').clone().appendTo('#savedContent');
                $('#content form').remove();
            })

            //on criteria change
            $('#companyId').on('change', e => {
                e.preventDefault();
                //let $fieldset = $submitForm.find('fieldset').attr('disabled', 'disabled');

                $.fn.getCompanySummaryRange(e.currentTarget.value).done((data) => {
                    var opt = $.map(data, (val, i) => { return `<option value='${val.id}'>${val.from} - ${val.to}</option>` });
                    $("#summaryRange").html(opt).selectpicker('refresh');

                    //$fieldset.removeAttr('disabled');
                    $table.bootstrapTable('refresh');
                });
            });

            //Create invoice
            $('#saveBtn').on('click', e => {
                e.preventDefault();

                var forms = $('#savedContent form');
                if (forms.length > 0) {
                    $(e.currentTarget).disabled();
                    forms.each(function (index, value) {
                        $(value).ajaxSubmit({}, (form, data, status, jqXHR, opt) => {
                            if (status === 'success') {
                                form.delay(500).fadeOut(500, function () {
                                    $(this).remove();
                                });
                            }
                        });
                    }).promise().done(function () {
                        $(e.currentTarget).enabled();
                        $table.bootstrapTable('refresh');
                    });
                }
            });
        });

    </script>
}