@model Web.ViewModels.PaymentFilterViewModel

@{
    ViewData["Title"] = "Payments";
    var tableId = Guid.NewGuid();
}

@section Toolbar  {
<div class="btn-toolbar" role="toolbar">
    <button id="bulkDeleteBtn" class="btn btn-danger"><i class="fa fa-trash-alt mr-1"></i> Remove</button>
</div>
}

<div class="card">
    <div class="card-body">
        <div id="toolbar" role="toolbar">
            <div class="btn-group mr-1" role="group">
                <a asp-controller="Payment" asp-action="Create" class="btn btn-secondary"><i class="fa fa-plus mr-1"></i> Create</a>
                <a asp-controller="Payment" asp-action="Bulk" class="btn btn-secondary"><i class="fa fa-mail-bulk mr-1"></i> Bulk</a>
            </div>

            <div class="btn-group mr-1" role="group" aria-label="Filter active button group">
                @*<a class="btn btn-secondary" asp-route="FilterView" data-target="modal">Filter</a>*@
                <button id="filterBtn" class="btn btn-secondary">Filter</button>
            </div>

            <form id="filterForm">
                <input type="hidden" asp-for="CompanyId" />
                <input type="hidden" asp-for="DateFrom" />
                <input type="hidden" asp-for="DateTo" />
                <input type="hidden" asp-for="CreatedDateFrom" />
                <input type="hidden" asp-for="CreatedDateTo" />
                <input type="hidden" name="RandomSort:boolean" id="RandomSort" data-val="@Model.RandomSort" data-value-type="boolean" value="@Model.RandomSort" />
            </form>
        </div>

        <table id="@(tableId)" data-toggle="table" data-url="/api/payment"
               data-query-params="queryParams"
               data-total-field="totalItems"
               data-data-field="items"
               data-filter-control="true"
               data-filter-control-container="true"
               data-click-to-select="true">
            <thead>
                <tr>
                    <th data-field="state" data-checkbox="true"></th>
                    <th data-field="no" data-sortable="true">No</th>
                    <th data-field="amount" data-sortable="true">Amount</th>
                    <th data-field="date" data-formatter="$.fn.bootstrapTable.formatDate" data-sorter="$.fn.bootstrapTable.sortDate" data-sortable="true">Date</th>
                    <th data-field="invoiceNo" data-formatter="invoiceFormatter">Invoice</th>
                    <th data-field="createdDate" class="text-nowrap text-right" data-formatter="$.fn.bootstrapTable.formatDateTime" data-sorter="$.fn.bootstrapTable.sortDate" data-sortable="true">Record Date</th>
                    <th data-formatter="actionFormatter" class="text-right table-active collapsing">Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        function xSubmitComplete(e, jqXHR, status) {
            if (status === 'success') {
                $('#@(tableId)').bootstrapTable('refresh');
                window.dialog.modal('hide');
            }
        }

        $(document).ready(e => {
            $table = $('#@(tableId)');

            $filterBtn = $('#filterBtn').click(_ => {
                var options = {
                    'url': '/payment/filter',
                    'data': $('#filterForm').serializeJSON({ parseNumbers: true, checkboxUncheckedValue: "false" })
                };

                $.ajax(options).done((data, status, jqXHR) => {
                    $(data).dialog('Filter', (action, e, content) => {
                        switch (action) {
                            case 'modal.on.load':
                                $(content).on('submit', evt => {
                                    evt.preventDefault();
                                    $('#filterForm').loadJSON(content.serializeJSON({ parseNumbers: true, checkboxUncheckedValue: "false" }));
                                    $table.bootstrapTable('refresh');
                                    window.dialog.modal('hide');
                                });
                                break;
                            case 'shown.bs.modal':
                                break;
                            case 'hidden.bs.modal':
                                break;
                        }
                    });
                });
            });

            $bulkDeleteBtn = $('#bulkDeleteBtn').click(_ => {
                if (!confirm('Are you sure want to delete this?')) { return false; }

                var selections = $table.bootstrapTable('getSelections');
                var ids = selections.map(x => x.id);

                if (ids.length > 0) {
                    var options = {
                        'type': 'post',
                        'url': '/payment/bulkdelete',
                        'data': { ids: ids }
                    };

                    $.ajax(options).done((data, status, jqXHR) => {
                        if (data == true) {
                            $table.bootstrapTable('refresh');
                        } else {
                            alert("Can't delete payments!");
                        }
                    });
                }
            });

            $table.on('load-success.bs.table', function () {
                toolbarActivity();
            });

            $table.on('check.bs.table uncheck.bs.table check-all.bs.table uncheck-all.bs.table', function () {
                toolbarActivity();
            });
        })

        function toolbarActivity() {
            var selections = $table.bootstrapTable('getSelections');

            if (!selections.length) {
                $bulkDeleteBtn.hide();
            } else {
                $bulkDeleteBtn.show();
            }
        }

        function queryParams(params) {
            if (!params.search) {
                params.search = $('div.search input').val();
            }
            var filterForm = $('#filterForm').serializeJSON({ parseNumbers: true });

            return $.extend({}, params, filterForm);
        }

        function dateFormat(value, row, index) {
            return moment(value).format('MMM/DD/YYYY');
        }

        function actionFormatter(value, row) {
            return `<a href='/payment/edit/${row.id}' class='btn btn-secondary mr-1'>Edit</a>`;
        }

        //function nameFormatter(value, row) {
        //    return `${value} <p class='text-muted'>${row.companyName}</p>`;
        //}

        function invoiceFormatter(value, row) {
            return `<a href='/invoice/details/${row.invoiceId}'>${value}</a> <p class='text-muted'>${row.companyName}</p>`
        }
    </script>
}
