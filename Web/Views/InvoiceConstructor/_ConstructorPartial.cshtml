@model Web.ViewModels.InvoiceConstructorFilterViewModel

@{
    ViewData["Title"] = "Invoice Constructor";
    Layout = null;
    var summaryRanges = (List<Web.ViewModels.CompanySummaryRangeViewModel>)ViewData["SummaryRanges"];
    var searchCriterias = (List<Web.ViewModels.InvoiceConstructorSearchViewModel>)ViewData["SearchCriterias"];
    var constructors = (List<Web.ViewModels.InvoiceConstructorViewModel>)ViewData["Constructors"];
    var customerCounts = (Dictionary<long, int>)ViewData["CustomerCounts"];
}

<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th rowspan="2">Search criteria</th>
                <th colspan="@(summaryRanges.Count)">@ViewData["CompanyName"] Summary Ranges</th>
                <th rowspan="2" class="table-active">Total</th>
            </tr>
            <tr>
                @foreach(var column in summaryRanges) {
                <th scope="col"><span class="badge badge-pill badge-dark">@column.From - @column.To</span></th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach(var criteria in searchCriterias) {
            <tr>
                <th scope="row">
                    <label class="text-nowrap d-block">@(criteria.Name)</label>
                    <label class="text-nowrap d-block">Customers: @(customerCounts.GetValueOrDefault(criteria.Id, 0))</label>
                </th>
                @foreach(var summaryRange in summaryRanges) {
                    var formId = Guid.NewGuid();
                    var constructor = constructors.Where(x => x.SearchCriteriaId == criteria.Id && x.SummaryRangeId == summaryRange.Id).FirstOrDefault();
                    <td class="align-middle collapsing @(constructor.Count == 0 ? "bg-light" : "")">
                        <form id="@(formId)" asp-route="UpdateDraftInvoices" asp-route-id="@(constructor.Id)" style="@(constructor.Count == 0 ? "display: none" :"")" data-request="ajax" rel="constructorOnUpdateDraftComplete">
                            <input type="hidden" name="Id" value="@(constructor.Id)" />
                            <input type="hidden" name="TotalCount" value="@(constructor.Count)" />
                            <input type="hidden" name="TotalAmount" value="@(constructor.TotalAmount)" />

                            <div class="text-center">
                                <label data-name="totalCount">@(constructor.Count)</label>
                                <strong>
                                    <label data-name="totalAmount" class="d-block">@(Core.Extension.NumberExtensionMethods.ToCurrency(constructor.TotalAmount))</label>
                                </strong>
                            </div>
                        </form>
                        <div class="d-flex justify-content-center">
                            @if(constructor.Count == 0) {
                                <a class="text-center btn btn-sm btn-link" asp-action="View" asp-route-id="@constructor.Id" data-target="modal" >Add</a>
                            } else {
                                <button class="btn btn-sm btn-link" type="submit" id="button-addon-@constructor.Id" form="@formId">Refresh</button>
                                <a class="text-center btn btn-sm btn-link" asp-action="View" asp-route-id="@constructor.Id" data-target="modal" >View</a>
                            }
                        </div>
                    </td>
                }
                <td class="table-active">
                    <input type="hidden" name="TotalCount" />
                    <input type="hidden" name="TotalAmount" />

                    <div class="text-center">
                        <label data-name="totalCount"></label>
                        <strong>
                            <label data-name="totalAmount" class="d-block"></label>
                        </strong>
                    </div>
                </td>
            </tr>
            }
        </tbody>
        <tfoot>
            <tr class="table-active">
                <th scope="row">Total</th>
                @foreach(var column in summaryRanges) {
                <td class="align-middle collapsing">
                    <input type="hidden" name="TotalCount" />
                    <input type="hidden" name="TotalAmount" />
                    <div class="text-center">
                        <label data-name="totalCount"></label>
                        <strong>
                            <label data-name="totalAmount" class="d-block"></label>
                        </strong>
                    </div>
                </td>
                }
                <td>
                    <input type="hidden" name="TotalCount" />
                    <input type="hidden" name="TotalAmount" />
                    <div class="text-center">
                        <label data-name="totalCount"></label>
                        <strong>
                            <label data-name="totalAmount" class="d-block"></label>
                        </strong>
                    </div>
                </td>
            </tr>
        </tfoot>
    </table>
</div>
