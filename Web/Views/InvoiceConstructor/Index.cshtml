@model Web.ViewModels.InvoiceConstructorFilterViewModel
@{
    ViewData["Title"] = "Invoice Constructor";
    var formId = Guid.NewGuid();
    var createInvoiceUrl = Url.RouteUrl("CreateDraftInvoices");
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index">Invoices</a></li>
        <li class="breadcrumb-item active" aria-current="page">Invoice constructor</li>
    </ol>
</nav>

<div class="row">
    <div class="col-lg-3 col-md-12">
        <div class="card">
            <div class="card-body">
                <form id="@formId" asp-route="GenerateConstructor">
                    <fieldset>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label asp-for="CompanyId"></label>
                            <select asp-for="CompanyId" asp-items="@ViewBag.Companies" class="form-control" required>
                                <option disabled selected> -- select an option -- </option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label asp-for="Date"></label>
                            <input asp-for="Date" type="date" class="form-control" required />
                        </div>

                        <div class="form-group">
                            <label asp-for="SearchCriterias"></label>
                            <select asp-for="SearchCriterias" asp-items="@ViewBag.SearchCriterias" name="SearchCriterias[]" class="form-control selectpicker" multiple data-live-search="true"></select>
                        </div>
                    </fieldset>
                </form>
            </div>
            <div class="card-footer">
                <button class="btn btn-primary" form="@formId">Generate</button>
            </div>
        </div>
    </div>
    <div class="col-lg-9 col-md-12">
        <div class="card">
            <div class="card-body" id="constructorContent">
                Apply filter to view generated invoices in database
            </div>
            <div class="card-footer">
                <button id="saveInvoiceDraftBtn" type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        generateInvoices = function (e) {
            e.preventDefault();
            $(e.target).ajaxSubmit({}, (form, data, status, jqXHR) => {
                if (status === 'success') {
                    form.find('input[name=Id]').val(data.id);
                    form.find('input[name=Count]').val(data.count);
                    form.find('input[name=Total]').val(data.totalAmount);
                    form.find('input:text[readonly]').val($.fn.bootstrapTable.formatCurrency(data.totalAmount)).trigger('change');
                    form.find('div.view').html(`<a href='/invoiceconstructor/view/${data.id}' data-target='modal'>View</a>`);

                    $.fn.initModalLink(form);
                }
            });
        }

        countTotal = function (e, content) {
            //Sem by column
            content.find('tbody tr:eq(0) td').each((index) => {
                var colSum = 0;
                content.find('tbody tr').find('td:eq(' + index + ') input[name=Total]').each((_i, tde) => {
                    var value = $(tde).val();
                    colSum += parseFloat(value || 0);
                });
                var totalTd = content.find('tfoot tr td:eq(' + index + ')');
                totalTd.find('label').html($.fn.bootstrapTable.formatCurrency(colSum));
                totalTd.find('input[name=Total]').val(colSum);
            });

            //Sum by row
            content.find('tbody tr, tfoot tr').each((index, tre) => {
                var rowSum = 0;
                $(tre).find('td input[name=Total]').each((_i, tde) => {
                    var value = $(tde).val();
                    rowSum += parseFloat(value || 0);
                });
                $(tre).find('td:last').html($.fn.bootstrapTable.formatCurrency(rowSum));
            });
        }

        $(document).ready(e => {
            var $form = $(`#@(formId)`);
            var $content = $('#constructorContent');

            var $saveInvoiceDraftBtn = $('#saveInvoiceDraftBtn').on('click', e => {
                e.preventDefault();

                var ids = $('#constructorContent form').find('input[name=Id]:not([value=0])').map(function (index, element) {
                    return $(element).val()
                });
                if (ids.length > 0) {
                    var options = {
                        'type': 'post',
                        'url': '@createInvoiceUrl',
                        'data': { ids: ids.toArray() }
                    };

                    $.when($.ajax(options)).then((data) => {
                        alert(data);
                        $form.submit();
                    });
                }
            });

            $form.on('submit', e => {
                e.preventDefault();
                $form.ajaxSubmit({}, (form, data, status, jqXHR) => {
                    $content.html(data).find('form').on('submit', e => generateInvoices(e));
                    $content.find('input:text[readonly]').on('change', e => countTotal(e, $content));
                })
            });

        });
    </script>
}