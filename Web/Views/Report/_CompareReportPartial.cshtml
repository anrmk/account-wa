@model Web.ViewModels.CompareReportViewModel
@{
    Layout = null;
    var companySettings = (Web.ViewModels.CompanySettingsViewModel)ViewData["CompanySettings"];
    var creditUtilizedSettings = (Web.ViewModels.CustomerCreditUtilizedSettingsViewModel)ViewData["CreditUtilizedSettings"];
    var tableId = Guid.NewGuid();
    var formId = Guid.NewGuid();

    var listUrl = Url.RouteUrl("GetCustomerCreditUtilizedComparedReport");
    var createOrUpdateCreditUtilizedUrl = Url.RouteUrl("CreateOrUpdateCreditUtilized");
}

<ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
    <li class="nav-item" role="presentation">
        <a class="nav-link active" id="pills-general-tab" data-toggle="pill" href="#pills-general" role="tab" aria-controls="pills-general" aria-selected="true">General</a>
    </li>
    @if(creditUtilizedSettings != null && companySettings.SaveCreditValues) {
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="pills-creditutilized-tab" data-toggle="pill" href="#pills-creditutilized" role="tab" aria-controls="pills-creditutilized" aria-selected="false">Credit Utilized</a>
        </li>
    }
</ul>
<div class="tab-content">
    <div class="tab-pane fade show active" id="pills-general" role="tabpanel" aria-labelledby="pills-general-tab">
        <div class="row">
            <div class="col">
                <h6><label asp-for="CustomerTypes"></label></h6>
                <table class="table table-bordered table-sm">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Saved</th>
                            <th>Generated</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var item in Model.CustomerTypes) {
                            <tr class="@(item.Status ? "" : "table-danger")">
                                <td>@item.Name</td>
                                <td>@item.SavedValue</td>
                                <td>@item.ReportValue</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <h6><label asp-for="Customers"></label></h6>
                <table class="table table-bordered table-sm">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Saved</th>
                            <th>Generated</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var item in Model.Customers) {
                            <tr class="@(item.Status ? "" : "table-danger")">
                                <td>@item.Name</td>
                                <td>@item.SavedValue</td>
                                <td>@item.ReportValue</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <h6>
                    <label asp-for="CreditUtilized" class="d-block mb-0"></label>
                    @if(creditUtilizedSettings != null) {
                        <small class="text-muted">@(creditUtilizedSettings.Id != 0 ? $"Saved settings at {creditUtilizedSettings.Date.ToString("MM/dd/yyyy")}, {creditUtilizedSettings.RoundName}": $"Used company default settings, {creditUtilizedSettings.RoundName}")</small>
                    }
                </h6>
                @if(companySettings != null && companySettings.SaveCreditValues) {
                    <table class="table table-bordered table-sm">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Credits for create</th>
                                <th>Credits for update</th>
                                <th>Credits ignored</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach(var item in Model.CreditUtilized) {
                                <tr class="@(item.Status ? "" : "table-danger")">
                                    <td>@item.Name</td>
                                    <td>@item.CreateCount</td>
                                    <td>@item.UpdateCount</td>
                                    <td>@item.IgnoredCount</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                } else {
                    <div class="alert alert-primary">Disabled in company settings</div>
                }
            </div>
            <div class="col">
                <h6><label asp-for="Balance"></label></h6>
                <table class="table table-bordered table-sm">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Saved</th>
                            <th>Generated</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach(var item in Model.Balance) {
                            var countSaved = item.SavedValue.Split('|')[0];
                            var amountSaved = decimal.Parse(item.SavedValue.Split('|')[1]);
                            var amountSavedStr = @Core.Extension.NumberExtensionMethods.ToCurrency(amountSaved);

                            var countReport = item.ReportValue.Split('|')[0];
                            var amountReport = decimal.Parse(item.ReportValue.Split('|')[1]);
                            var amountReportStr = @Core.Extension.NumberExtensionMethods.ToCurrency(amountReport);

                            <tr class="@(item.Status ? "" : "table-danger")">
                                <td>@(item.Name.Equals("-31-0") ? "Current" : item.Name)</td>
                                <td>
                                    <span class="text-nowrap d-block">@countSaved</span>
                                    <span class="text-nowrap d-block">@amountSavedStr</span>
                                </td>
                                <td>
                                    <span class="text-nowrap d-block">@countReport</span>
                                    <span class="text-nowrap d-block">@amountReportStr</span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    @if(creditUtilizedSettings != null && companySettings.SaveCreditValues) {
        <div class="tab-pane fade" id="pills-creditutilized" role="tabpanel" aria-labelledby="pills-creditutilized-tab">
            <h6>
                <label asp-for="CreditUtilized" class="d-block mb-0">Credit Utilized (@Model.Date.ToString("MM/dd/yyyy"))</label>
                @if(creditUtilizedSettings != null) {
                    <small class="text-muted">@(creditUtilizedSettings.Id != 0 ? $"Saved settings at {creditUtilizedSettings.Date.ToString("MM/dd/yyyy")}, {creditUtilizedSettings.RoundName}" : $"Used company default settings, {creditUtilizedSettings.RoundName}")</small>
                }
            </h6>
            <form id="@formId">
                <input asp-for="CompanyId" type="hidden" />
                <input asp-for="NumberOfPeriods" type="hidden" />
                <input asp-for="Date" type="hidden" value="@Model.Date.ToString("yyyy-MM-dd")" />
            </form>
            <div id="toolbar" role="toolbar">
                <div class="btn-group">
                    <button id="makeRecognizedBtn" class="btn btn-secondary">Make recognized</button>
                    <button id="makeIgnoredBtn" class="btn btn-secondary btn-warning">Make ignored</button>
                </div>
            </div>
            <div class="table-responsive">
                <table id="@tableId" data-toggle="table" data-url="@listUrl" class="table table-sm table-bordered"
                       data-query-params="queryParams"
                       data-total-field="totalItems"
                       data-data-field="items"
                       data-select-item-name="CreditUtilizeds[]">
                    <thead>
                        <tr>
                            <th data-checkbox="true" rowspan="2"></th>
                            <th data-field="customerNo" class="collapsing" rowspan="2">Account Number</th>
                            <th data-field="customerName" rowspan="2">Business Name</th>
                            <th colspan="2">Credits for create</th>
                            <th colspan="2">Credits for update</th>
                            <th colspan="2">Credits ignored</th>
                        </tr>
                        <tr>
                            <th data-field="value" class="collapsing" data-formatter="creditCreatedFormatter">Old</th>
                            <th data-field="newValue" class="collapsing" data-formatter="creditCreatedFormatter">New</th>
                            <th data-field="value" class="collapsing" data-formatter="creditUpdatedFormatter">Old</th>
                            <th data-field="newValue" class="collapsing" data-formatter="creditUpdatedFormatter">New</th>
                            <th data-field="value" class="collapsing" data-formatter="creditIgnoredFormatter">Old</th>
                            <th data-field="newValue" class="collapsing" data-formatter="creditIgnoredFormatter">New</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    function queryParams(params) {
        var filterForm = $('#@formId').serializeJSON();
        return $.extend({}, params, filterForm);
    }

    function creditCreatedFormatter(value, row) {
        if (row['isNew'] && !row['isIgnored']) {
            var date = value === row['value'] ? row['createdDate'] : row['newCreatedDate'];
            return `<span class='d-block'>${$.fn.bootstrapTable.formatCurrency(value)}</span><small class='text-muted'>${$.fn.bootstrapTable.formatDate(date)}</small>`;
        } else {
            return `<span></span>`;
        }
    }

    function creditUpdatedFormatter(value, row) {
        if (!row['isNew'] && !row['isIgnored']) {
            var date = value === row['value'] ? row['createdDate'] : row['newCreatedDate'];
            return `<span class='d-block'>${$.fn.bootstrapTable.formatCurrency(value)}</span><small class='text-muted'>${$.fn.bootstrapTable.formatDate(date)}</small>`;
        } else {
            return '<span></span>';
        }
    }

    function creditIgnoredFormatter(value, row) {
        if (row['isIgnored']) {
            var date = value === row['value'] ? row['createdDate'] : row['newCreatedDate'];
            return `<span class='d-block'>${$.fn.bootstrapTable.formatCurrency(value)}</span><small class='text-muted'>${$.fn.bootstrapTable.formatDate(date)}</small>`;
        } else {
            return '<span></span>';
        }
    }

    $(document).ready(e => {
        var $table = $('#@(tableId)').bootstrapTable();
        var $form = $('#@(formId)');

        var $makeIgnoredBtn = $('#makeIgnoredBtn');
        var $makeRecognizedBtn = $('#makeRecognizedBtn');

        $table.on('load-success.bs.table', function (e, data, jqXHR) {
            toolbarStatus();
        });

        $table.on('check.bs.table uncheck.bs.table check-all.bs.table uncheck-all.bs.table', function () {
            toolbarStatus();
        });

        $makeIgnoredBtn.on('click', e => creditUtilizedChangeStatus(e, true));
        $makeRecognizedBtn.on('click', e => creditUtilizedChangeStatus(e, false));

        function creditUtilizedChangeStatus (e, isIgnored) {
            e.preventDefault();

            var selections = $table.bootstrapTable('getSelections');
            selections.forEach(x => x.isIgnored = isIgnored)
            
            if (selections.length > 0) {
                var data = {
                    'credits': selections
                };

                var options = {
                    'url': '@(createOrUpdateCreditUtilizedUrl)',
                    'type': 'post',
                    'contentType': 'application/json; charset=utf-8',
                    'data': JSON.stringify(data),
                    'complete': (jqXHR, status) => {
                        if (status === "success") {
                            $table.bootstrapTable('refresh');
                        }
                    }
                };

                $.ajax(options);
            }
        }

        function toolbarStatus () {
            var options = $table.bootstrapTable('getOptions');
            var selections = $table.bootstrapTable('getSelections');

            if (!selections.length) {
                $makeIgnoredBtn.hide();
                $makeRecognizedBtn.hide();
            } else {
                $makeIgnoredBtn.show();
                $makeRecognizedBtn.show();
            }
        }
    });
</script>